{"version":3,"sources":["problems/alg.js"],"names":["problems","generate","solution","random","int","v1","uniqueInts","v2","q","eq1","eq2","varnames","uniqueVariables","a","format","question","m","display","algebra","formatEquation","answer","nonZeroInt","b","formatExpression","explanation","turnover","documented","calculator","coefficient","sign","rhs","inner1","bool","choice","primes","getRange","inner2","okFactors","add1","newFactor","splice","indexOf","add2","gcf1","gcf","gcf2","outer","c","ans","formatCoef"],"mappings":"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","file":"static/js/3.34f32603.chunk.js","sourcesContent":["import React from \"react\";\nimport {random, algebra, K, Katex} from \"../utils\";\n\nlet problems = {\n  \"simult1\": {\n    generate() {\n      let solution = [random.int(-5, 5), random.int(-5, 5)];\n      let v1 = random.uniqueInts(-5, 5, 2, true);\n      let v2 = random.uniqueInts(-5, 5, 2, true);\n      return {\n        q: {\n          eq1: [v1[1], -v1[0], v1[1]*solution[0] - v1[0]*solution[1]],\n          eq2: [v2[1], -v2[0], v2[1]*solution[0] - v2[0]*solution[1]]\n        },\n        varnames: random.uniqueVariables(2),\n        a: solution\n      }\n    },\n    format({q: {eq1, eq2}, varnames, a}) {\n      return {\n        question: <span>\n          Solve the simultaneous equations to find the values of <K m={varnames[0]}/> and <K m={varnames[1]}/>.\n          <Katex display={true}>{algebra.formatEquation(\n            [[eq1[0], varnames[0]], [eq1[1], varnames[1]]],\n            [[eq1[2]]]\n          )}</Katex>\n          <Katex display={true}>{algebra.formatEquation(\n            [[eq2[0], varnames[0]], [eq2[1], varnames[1]]],\n            [[eq2[2]]]\n          )}</Katex>\n        </span>,\n        answer: <Katex>{varnames[0]}={a[0]},\\,{varnames[1]}={a[1]}</Katex>\n      }\n    }\n  },\n  \"l1\": {\n    generate() {\n      let a = random.nonZeroInt(-10, 10);\n      let b = random.nonZeroInt(-10, 10);\n      return {\n        q: [a, b],\n        a: b - a\n      }\n    },\n    format({q, a}) {\n      return {\n        question: <span>\n          <Katex>{algebra.formatExpression(\"x\", q[0])}={q[1]}</Katex>\n          <br/>\n          Solve for <K m=\"x\"/>\n        </span>,\n        answer: <Katex>x = {a}</Katex>,\n        explanation: <span>\n          To get only <K m=\"x\"/> on the left side, we can subtract <K m={q[0]}/> from both sides.\n          <br/>\n          This gives us <Katex>{q[1]} - {q[0]}</Katex> on the right-hand-side: <K m={a}/>.\n        </span>\n      }\n    },\n    turnover: 200,\n    documented: false,\n    calculator: false\n  },\n  \"l2\": {\n    generate() {\n      let coefficient = random.sign() * random.int(3, 9);\n      let rhs = random.sign() * random.int(1, 10);\n      return {\n        q: [coefficient, coefficient * rhs],\n        a: rhs\n      }\n    },\n    format({q, a}) {\n      return {\n        question: <span>\n          <Katex>{algebra.formatEquation([[q[0], \"x\"]], [q[1]])}</Katex>\n          <br/>\n          Solve for <K m=\"x\"/>\n        </span>,\n        answer: <Katex>x = {a}</Katex>\n      }\n    }\n  },\n  \"factor\": {\n    generate() {\n      let inner1 = random.bool(0.5) ? random.choice(algebra.primes.getRange(0, 3)) : 1;\n      let inner2 = (inner1 !== 1 && random.bool(0.5)) ? random.choice(algebra.primes.getRange(0, 2)) : 1;\n      \n      let okFactors = [2, 2, 2, 3, 3, 5, 5, 7, 11];\n      let add1 = 1;\n      let newFactor = random.choice(okFactors);\n      while (inner1 * add1 * newFactor < 15) {\n        okFactors.splice(okFactors.indexOf(newFactor), 1);\n        add1 *= newFactor;\n        newFactor = random.choice(okFactors);\n      }\n      let add2 = 1;\n      newFactor = random.choice(okFactors);\n      while (inner1 * inner2 * add1 * add2 * newFactor <= 100) {\n        okFactors.splice(okFactors.indexOf(newFactor), 1);\n        add2 *= newFactor;\n        newFactor = random.choice(okFactors);\n      }\n      \n      let gcf1 = algebra.gcf(inner1, add1);\n      inner1 /= gcf1;\n      add1 /= gcf1;\n      let gcf2 = algebra.gcf(inner2, add2);\n      inner2 /= gcf2;\n      add2 /= gcf2;\n      \n      let outer = random.bool(0.2) ? random.choice([2, 3, 5, 10]) : 1;\n      \n      return {\n        q: {\n          a: inner1 * inner2 * outer,\n          b: (inner1 * add2 + inner2 * add1) * outer,\n          c: add1 * add2 * outer\n        },\n        ans: [outer, inner1, add1, inner2, add2]\n      }\n    },\n    format({q: {a, b, c}, ans}) {\n      return {\n        question: <p>\n        Factor the following quadratic expression:\n        <Katex display>{algebra.formatExpression([a, \"x^2\"], [b, \"x\"], c)}</Katex>\n      </p>,\n        answer: <Katex>{algebra.formatCoef(ans[0])}({algebra.formatExpression([ans[1], \"x\"], ans[2])})({algebra.formatExpression([ans[3], \"x\"], ans[4])})</Katex>\n      }\n    }\n  }\n};\n\nexport default problems;"],"sourceRoot":""}