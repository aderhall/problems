{"version":3,"sources":["problems.js","OutsideClickDetector.js","SetCard.js","App.js","reportWebVitals.js","index.js"],"names":["problems","name","generate","a","Math","floor","random","b","q","format","question","answer","explanation","turnover","documented","calculator","coefficient","int","rhs","variant","bool","noun","currency","multiplier","pow","fmt","toNPlaces","indArticle","round","collections","problemHistory","names","male","female","nouns","currencies","min","max","float","places","result","undefined","choice","arr","length","this","concat","nameAndGender","allNames","index","money","word","number","s","toString","pointIndex","indexOf","remainingZeros","i","newProblemData","id","data","count","tryAddToHistory","trimHistory","console","warn","qAsString","JSON","stringify","date","entry","today","dateToString","Date","push","sum","oldest","dateString","stringToDate","shift","m","getMonth","d","getDate","getFullYear","string","ys","parseInt","slice","ms","ds","OutsideClickDetector","props","selfRef","useRef","onClickOutside","active","filteredProps","useEffect","handler","event","current","contains","target","document","addEventListener","removeEventListener","ref","children","defaultProps","className","LineBreakP","split","map","item","Fragment","DotsMenu","useState","open","setOpen","onClick","aria-label","width","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","items","SetItem","problem","answerVisible","setAnswerVisible","expVisible","setExpVisible","SetCard","route","newSet","goto","problemList","idList","problemData","Sheet","printPage","mode","BASE_PATH","Choice","Chooser","Object","entries","getRouteFromUrl","str","path","window","location","href","filter","x","parse","decodeURIComponent","escape","atob","App","setRoute","handleBack","now","cleanHistory","obj","history","pushState","encodeURIComponent","btoa","unescape","title","printMode","setPrintMode","print","back","fillRule","clipRule","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48166aee.chunk.js","sourcesContent":["let problems = {\n  \"l1\": {\n    name: \"solving simple linear equations\",\n    generate() {\n      // Question: x + a = b\n      // Answer: x = b - a\n      // Random integer between -10 and 10\n      let a = Math.floor(21*Math.random()) - 10;\n      let b = Math.floor(21*Math.random()) - 10;\n      return {\n        q: [a, b],\n        a: b - a\n      }\n    },\n    format({q, a}) {\n      return {\n        question: `x + ${q[0]} = ${q[1]}\\nSolve for x`,\n        answer: `x = ${a}`,\n        explanation: `To get only x on the left side, we can subtract ${q[0]} from both sides.\n        This gives us ${q[1]} - ${q[0]} on the right-hand-side: ${a}.`\n      }\n    },\n    turnover: 200,\n    documented: false,\n    calculator: false\n  },\n  \"l2\": {\n    name: \"solving simple linear equations with multiplication\",\n    generate() {\n      let coefficient = random.int(3, 25);\n      let rhs = random.int(1, 10)\n      return {\n        q: [coefficient, coefficient * rhs],\n        a: rhs\n      }\n    },\n    format({q, a}) {\n      return {\n        question: `${q[0]}x = ${q[1]}\\nSolve for x`,\n        answer: `x = ${a}`\n      }\n    }\n  },\n  \"e1\": {\n    name: \"calculating exponential growth\",\n    generate() {\n      let variant = random.bool();\n      return {\n        q: [random.int(15, 10000), random.bool(), random.int(1, 10) / 2, random.int(3, 20)],\n        name: random.name(),\n        noun: variant ? random.noun() : 0,\n        currency: random.currency(),\n        variant: variant\n      }\n    },\n    format({q, name, noun, currency, variant}) {\n      let multiplier = 1 + (q[1] ? 0.01 : -0.01) * q[2];\n      let answer = q[0] * Math.pow(multiplier, q[3]);\n      return {\n        question: `${name} ${variant ? \"buys\" : \"deposits\"} ${currency}${fmt.toNPlaces(q[0], 2)} ${variant ? \"worth of stock\" : \"\"} in ${variant ? `${fmt.indArticle(noun)} ${noun} company` : \"a bank\"}. Every year, their ${variant ? \"stock price\" : \"balance\"} ${q[1] ? \"increases\" : \"decreases\"} by ${q[2]}%. After ${q[3]} years, how much money is ${variant ? \"the stock worth\" : \"in their bank account\"}?`,\n        answer: `${currency}${fmt.toNPlaces(answer, 2)}`,\n        explanation: `${name}'s ${variant ? \"stock price\" : \"balance\"} ${q[1] ? \"increases\" : \"decreases\"} by ${q[2]}% per year, so each year its value changes by a factor of ${multiplier}.\\nRepeatedly multiplying by ${multiplier}, ${q[3]} times, is the same as taking ${multiplier} to the power of ${q[3]}, which is ${fmt.round(Math.pow(multiplier, q[3]), 3)}.\\nMultiplying this by the initial amount gives us ${fmt.round(answer, 3)}.`\n      }\n    },\n    turnover: 1000,\n    documented: false,\n    calculator: true\n  },\n  \"dummy\": {\n    name: \"dummy\",\n    generate() {\n      return {\n        q: 1\n      }\n    },\n    format({q}) {\n      return {\n        question: `${q}`,\n        answer: `${q}`\n      }\n    },\n    turnover: 0,\n    documented: false,\n    calculator: false\n  }\n};\nlet collections = {\n  \"Algebra\": [\"l1\", \"l2\"],\n  \"Exponents and compound interest\": [\"e1\"]\n}\nlet problemHistory = {};\n\nlet random = {\n  names: {\n    male: [\"Bill\", \"Bob\", \"Jebediah\", \"Mohamed\", \"Karim\", \"Habib\", \"Santiago\", \"Gabriel\", \"Jayden\", \"Liam\", \"Noah\", \"James\", \"Ali\", \"Omar\", \"Yusif\", \"Wei\", \"Jie\", \"Hao\", \"Arjun\", \"Reyansh\", \"Ayaan\", \"Ori\", \"Ahmad\", \"Haruki\", \"Riku\", \"Lucas\", \"Nathan\", \"Stefan\", \"Leonardo\", \"Francesco\", \"Alessandro\", \"Leo\", \"Jack\", \"Sergei\", \"Taika\"],\n    female: [\"Valentina\", \"Roxanne\", \"Lola\", \"Fatima\", \"Mariam\", \"Rowan\", \"Mariana\", \"Lucia\", \"Camila\", \"Olivia\", \"Charlotte\", \"Emma\", \"Leyla\", \"Zeynab\", \"Salma\", \"Jing\", \"Ying\", \"Yan\", \"Aadya\", \"Diya\", \"Saanvi\", \"Sarah\", \"Jana\", \"Honoka\", \"Akari\", \"Anna\", \"Sophia\", \"Yasmine\", \"Ginevra\", \"Beatrice\", \"Aurora\", \"Stella\", \"Lucy\", \"Anastasia\", \"Mia\"]\n  },\n  nouns: [\"shoe\", \"car\", \"carpet\", \"rocket\", \"microscope\", \"tambourine\", \"guitar\", \"envelope\", \"jetpack\", \"parachute\", \"donut\", \"vegetable\"],\n  currencies: [\"$\", \"€\", \"￡\"],\n  int(min, max) {\n    return Math.floor((1 + max - min) * Math.random()) + min;\n  },\n  bool() {\n    return Math.random() >= 0.5;\n  },\n  float(min, max, places) {\n    let result = Math.random() * (max - min) + min;\n    if (places === undefined) {\n      return result;\n    }\n    return fmt.round(result, places);\n  },\n  choice(arr) {\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n  name() {\n    return this.choice(this.names.male.concat(this.names.female));\n  },\n  nameAndGender() {\n    let allNames = this.names.male.concat(this.names.female);\n    let index = Math.floor(allNames.length * Math.random());\n    return [\n      allNames[index],\n      index >= this.names.male.length // true if female, false if male\n    ]\n  },\n  noun() {\n    return this.choice(this.nouns);\n  },\n  currency() {\n    return this.choice(this.currencies);\n  },\n  money(min, max) {\n    return this.float(min, max, 2);\n  }\n}\nlet fmt = {\n  indArticle(word) {\n    if (word[0] in [\"a\", \"e\", \"i\", \"o\", \"u\"]) {\n      return \"an\";\n    } else {\n      return \"a\";\n    }\n  },\n  round(number, places) {\n    return Math.round(number * Math.pow(10, places)) / Math.pow(10, places);\n  },\n  toNPlaces(number, places) {\n    let s = this.round(number, places).toString();\n    if (places > 0) {\n      let pointIndex = s.indexOf(\".\")\n      if (pointIndex === -1) {\n        s += \".\";\n        pointIndex = s.length - 1;\n      }\n      let remainingZeros = places - (s.length - 1 - pointIndex)\n      for (let i = 0; i < remainingZeros; i++) {\n        s += \"0\";\n      }\n    }\n    return s;\n  }\n}\n\n//function logProblem(problem) {\n//  for (let prop in problem) {\n//    console.log(`${prop}: `, problem[prop]);\n//  }\n//}\n\n// Returns a new problem object if possible\n// Returns null if unable to create a unique problem not already in problemHistory\nfunction newProblem(id) {\n  return problems[id].format(newProblemData(id));\n}\n// Tries to create a unique problem object. If it fails, it will fall back on a recent problem\nfunction newProblemData(id) {\n  let data;\n  // Generate up to 200 problems, before deciding that all possibilities are exhausted and we should just return an old problem\n  for (let count = 0; count < 200; count++) {\n    data = problems[id].generate();\n    if (tryAddToHistory(id, data.q)) {\n      return data;\n    } else {\n      trimHistory(id);\n    }\n  }\n  console.warn(`Unable to create unique problem (id: ${id}, data: ${data})`);\n  return data;\n}\n\n// Returns true if successful, false if already in problemHistory\nfunction tryAddToHistory(id, q) {\n  // TODO: This only looks at today's problemHistory, it should look at all problemHistory\n  // If this problem id doesn't exist in problemHistory, create it\n  if (!(id in problemHistory)) {\n    problemHistory[id] = {};\n  }\n  \n  // Check for a matching q object in this id's history\n  let qAsString = JSON.stringify(q);\n  for (let date in problemHistory[id]) {\n    for (let entry of problemHistory[id][date]) {\n      if (JSON.stringify(entry) === qAsString) {\n        // If there's a match, return false without adding the duplicate q\n        return false;\n      }\n    }\n  }\n  \n  // If there's no entry for today, create one\n  let today = dateToString(new Date());\n  if (!(today in problemHistory[id])) {\n    problemHistory[id][today] = [];\n  }\n  // If no duplicates were found, go ahead and add it\n  problemHistory[id][today].push(q);\n  return true;\n}\n\n// Removes the oldest item from the specified id's history if the turnover has been reached\nfunction trimHistory(id) {\n  let sum = 0;\n  let oldest = new Date();\n  let date;\n  for (let dateString in problemHistory[id]) {\n    date = stringToDate(dateString)\n    if (date < oldest) {\n      oldest = date;\n    }\n    sum += problemHistory[id][dateString].length;\n  }\n  if (sum > problems[id].turnover) {\n    // shift() removes the first entry, which is the oldest since they are added with push()\n    problemHistory[id][dateToString(oldest)].shift();\n  }\n}\n\n// Removes all entries from problemHistory that are older than 3 weeks\nfunction cleanHistory() {\n  let now = new Date();\n  for (let id in problemHistory) {\n    for (let dateString in problemHistory[id]) {\n      // If entry is more than 3 weeks old, delete it\n      if (now - stringToDate(dateString) > 3 * 7 * 24 * 60 * 60 * 1000) {\n        delete problemHistory[id][dateString]\n      }\n    }\n  }\n}\n\nfunction dateToString(date) {\n  let m = (date.getMonth() + 1 < 10 ? \"0\" : \"\") + (date.getMonth() + 1);\n  let d = (date.getDate() < 10 ? \"0\": \"\") + date.getDate();\n  return `${date.getFullYear()}${m}${d}`;\n}\n\nfunction stringToDate(string) {\n  let ys = parseInt(string.slice(0, 4));\n  let ms = parseInt(string.slice(4, 6)) - 1;\n  let ds = parseInt(string.slice(6, 8));\n  return new Date(ys, ms, ds)\n}\n\n//function testHistory() {\n//  let problem;\n//  for (let i = 0; i < 3; i++) {\n//    problem = newProblem(\"dummy\");\n//    if (problem === null) {\n//      console.log(\"null\");\n//    } else {\n//      logProblem(problem);\n//    }\n//  }\n//}\n\n//logProblem(newProblem(\"expgr1\"));\n\nexport {newProblem, newProblemData, problems, cleanHistory, collections};","import React, { useRef, useEffect } from \"react\";\n\nfunction OutsideClickDetector(props) {\n    // Create a reference to this wrapper element\n    const selfRef = useRef(null);\n    // Destructure the callback from the props object so that we can tell useEffect to update whin it is changed\n    const { onClickOutside, active, ...filteredProps } = props;\n    useEffect(() => {\n        if (active) {\n            const handler = (event) => {\n                // If the ref has been set and the click happens outside of this component\n                if (selfRef.current !== null && !selfRef.current.contains(event.target)) {\n                    // Call the props.onClickOutside callback\n                    onClickOutside();\n                }\n            }\n            document.addEventListener(\"mousedown\", handler);\n            document.addEventListener(\"focusin\", handler); // Focus doesn't bubble, so it must be captured\n            return () => {\n                // Cleanup\n                document.removeEventListener(\"mousedown\", handler);\n                document.removeEventListener(\"focusin\", handler);\n            };\n        }\n    }, [selfRef, onClickOutside, active]); // Update the effect when we are given a new reference or callback\n    \n    return (\n        <div ref={selfRef} {...filteredProps}>\n            {props.children}\n        </div>\n    );\n}\nOutsideClickDetector.defaultProps = {\n    className: \"\",\n    onClickOutside: () => console.warn(\"No onClickOutside passed to OutsideClickDetector\"),\n    active: true\n}\n\nexport default OutsideClickDetector;","import React, {useState} from \"react\";\nimport \"./SetCard.css\";\nimport {problems} from \"./problems\";\nimport OutsideClickDetector from \"./OutsideClickDetector\";\n\nfunction LineBreakP(props) {\n  return <p {...props}>\n    {props.children.split(/(?:\\r\\n|\\r|\\n)/).map((item, index) => (\n      <React.Fragment key={index}>\n        {item}\n        <br />\n      </React.Fragment>\n    ))}\n  </p>\n}\n\nfunction DotsMenu(props) {\n  const [open, setOpen] = useState(false);\n  \n  return <OutsideClickDetector className=\"DotsMenu\" onClickOutside={() => setOpen(false)} active={open}>\n    <button className=\"DotsMenu__button\" onClick={() => setOpen(!open)} aria-label=\"Actions Menu\">\n      <svg width=\"24\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n      </svg>\n    </button>\n    <ul className={\"DotsMenu__popup\" + (open ? \" open\" : \"\")}>\n      {props.items.map((item, index) => (\n        <li key={index}><button onClick={() => {item[1](); setOpen(false);}}>{item[0]}</button></li>\n      ))}\n    </ul>\n  </OutsideClickDetector>\n}\n\nfunction SetItem({problem}) {\n  const [answerVisible, setAnswerVisible] = useState(false);\n  const [expVisible, setExpVisible] = useState(false);\n  return (\n    <li>\n      <LineBreakP className=\"SetItem__question\">{problem.question}</LineBreakP>\n      <button className=\"link-button\" onClick={() => setAnswerVisible(!answerVisible)}>\n        {answerVisible ? \"Hide answer\" : \"Show answer\"}\n      </button>\n      <div className={\"SetItem__answer-section\" + (answerVisible ? \" open\" : \"\")}>\n        <LineBreakP className=\"SetItem__answer\">{problem.answer}</LineBreakP>\n        {problem.explanation && <>\n          <button className=\"link-button\" onClick={() => setExpVisible(!expVisible)}>\n            {expVisible ? \"Hide explanation\" : \"Show explanation\"}\n          </button>\n          <LineBreakP className={\"SetItem__explanation\" + (expVisible ? \" open\" : \"\")}>\n            {problem.explanation}\n          </LineBreakP>\n        </>}\n      </div>\n    </li>\n  );\n}\n\nfunction SetCard({route, newSet, goto}) {\n  const [name, problemList, idList] = route;\n  return (\n    <div className=\"SetCard\">\n      <div className=\"SetCard__header\">\n        <h2>{name}</h2>\n        <DotsMenu items={[\n          [\"Export worksheet\", () => goto([name, problemList, idList, 1])],\n          [\"Export answer sheet\", () => goto([name, problemList, idList, 2])],\n          [\"Export answers and explanations\", () => goto([name, problemList, idList, 3])],\n          [\"Reload all problems\", () => newSet(name)]\n        ]}/>\n      </div>\n      <hr />\n      <ol className=\"SetCard__list\">\n        {problemList.map((problemData, index) => {\n          let problem = problems[idList[index]].format(problemData);\n          return <SetItem key={problem.question} problem={problem}/>\n        })}\n      </ol>\n    </div>\n  );\n}\n\nfunction Sheet({route, printPage}) {\n  const [name, problemList, idList, mode] = route;\n  return (\n    <div className=\"SetCard\">\n      <div className=\"SetCard__header\">\n        <h2>{name}</h2>\n        <button className=\"link-button no-print\" onClick={() => printPage()}>Print</button>\n      </div>\n      <hr />\n      <ol className=\"SetCard__list\">\n        {problemList.map((problemData, index) => {\n          let problem = problems[idList[index]].format(problemData);\n          let data;\n          switch (mode) {\n            case 1:\n              data = problem.question;\n              break;\n            case 2:\n              data = problem.answer;\n              break;\n            case 3:\n              if (problem.explanation) {\n                data = `${problem.answer}\\n\\n${problem.explanation}`;\n              } else {\n                data = problem.answer;\n              }\n              break;\n            default:\n              break;\n          }\n          return <li key={JSON.stringify(problemData)}>\n            <LineBreakP>{data}</LineBreakP>\n          </li>\n        })}\n      </ol>\n    </div>\n  );\n}\n\nexport {SetCard, Sheet};","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport {SetCard, Sheet} from \"./SetCard\";\nimport {cleanHistory, collections, newProblemData} from \"./problems\";\n\nconst BASE_PATH = \"/problems\";\n\nfunction Choice({name, onClick}) {\n  return (\n    <button className=\"Choice\" onClick={onClick}>\n      <span>{name}</span>\n      <svg width=\"24px\" xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n      </svg>\n    </button>\n  );\n}\n\nfunction Chooser({newSet}) {\n  return (\n    <div className=\"Chooser\">\n      {Object.entries(collections).map(([name, _topics], index) => (\n        <Choice name={name} key={index} onClick={() => newSet(name)} />\n      ))}\n    </div>\n  );\n}\n\nfunction encodeObj(obj) {\n  return encodeURIComponent(btoa(unescape(encodeURIComponent(JSON.stringify(obj)))));\n}\nfunction decodeObj(str) {\n  return JSON.parse(decodeURIComponent(escape(atob(decodeURIComponent(str)))));\n}\nfunction getRouteFromUrl() {\n  let path = window.location.href.split(\"#\").filter(x => x !== \"\");\n  if (path.length === 1) {\n    return [null];\n  }\n  return decodeObj(path[1])\n}\n\nfunction App() {\n  const [route, setRoute] = useState(getRouteFromUrl());\n  useEffect(() => {\n    const handleBack = () => {\n      setRoute(getRouteFromUrl());\n    }\n    window.addEventListener(\"popstate\", handleBack);\n    return () => {\n      window.removeEventListener(\"popstate\", handleBack);\n    }\n  });\n  cleanHistory();\n  const goto = route => {\n    // eslint-disable-next-line no-unused-vars\n    const [name, _problemList, _idList, mode] = route;\n    if (name !== null) {\n      window.history.pushState(route, \"\", `${BASE_PATH}#${encodeObj(route)}`);\n      document.title = `${name}${mode === 0 ? \"\" : ` (${mode === 1 ? \"worksheet\" : \"answers\"})`} | Adrian's endless source of problems`;\n    } else {\n      window.history.pushState(null, \"\", `${BASE_PATH}`);\n      document.title = \"Adrian's endless source of problems\";\n    }\n    setRoute(route)\n  }\n  const newSet = name => {\n    let problemList = [];\n    let idList = [];\n    let id;\n    for (let i = 0; i < 5; i++) {\n      // Random problem id from the collection topics list\n      id = collections[name][Math.floor(Math.random() * collections[name].length)];\n      problemList.push(newProblemData(id));\n      idList.push(id);\n    }\n    goto([name, problemList, idList, 0]);\n  }\n  \n  const [printMode, setPrintMode] = useState(false);\n  const printPage = () => {\n    setPrintMode(true);\n  }\n  useEffect(() => {\n    if (printMode) {\n      window.print();\n      setPrintMode(false);\n    }\n  }, [printMode]);\n  \n  return (\n    <div className={\"App\" + (printMode ? \" print\" : \"\")}>\n      <header className=\"App__header no-print\">\n        <h1>Adrian's endless source of problems</h1>\n      </header>\n      <main>\n        {route[0] === null ? \n          <Chooser newSet={newSet} /> : \n          <>\n            <nav className=\"no-print\">\n              <button className=\"link-button\" onClick={() => window.history.back()}>\n                <svg width=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n                </svg>\n                Back\n              </button>\n              <button className=\"link-button\" onClick={() => goto([null])}>\n                <svg width=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                </svg>\n                Home\n              </button>\n            </nav>\n            {route[3] === 0 ? \n              <SetCard route={route} newSet={newSet} goto={goto} /> :\n              <Sheet route={route} printPage={printPage} />\n            }\n          </>\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/* TODO:\n  * Mathjax\n  * SVG Diagrams\n  * √ Client side routing\n  * Help page documentation\n  * √ Generate problems in app, not setcard\n  * √ Menu option to reload each problem\n  * √ Menu options to generate question and answer sheets\n  * √ Deploy to gh-pages\n  * PDF download\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}